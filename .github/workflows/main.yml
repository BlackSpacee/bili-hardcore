name: Build and Release Cross-Platform Executables

on:
  push:
    tags:
      - 'v*.*.*' # 匹配以 v1.0.0 格式的标签 
  workflow_dispatch:  # 添加手动触发

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.13"]

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 设置 Python 环境
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # 缓存 pip 依赖
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      # 打包可执行文件
      - name: Build with PyInstaller
        run: |
          pyinstaller bili-hardcore.spec --noconfirm

      # 上传单文件可执行程序作为 artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bili-hardcore-${{ matrix.os }}
          path: dist/bili-hardcore*
          retention-days: 7

      # 创建 GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      # 上传 Release 资产
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/bili-hardcore${{ runner.os == 'Windows' && '.exe' || '' }}
          asset_name: bili-hardcore-${{ matrix.os }}-${{ github.ref_name }}${{ runner.os == 'Windows' && '.exe' || '' }}
          asset_content_type: application/octet-stream